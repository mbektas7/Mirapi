{"version":3,"sources":["src/app/main/authentication/invitedRegister/inviteRegister.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpRequestsService } from 'app/shared/services/httpRequests.service';\nimport { AlertifyService } from 'app/shared/services/alertify.service';\n\n@Injectable()\nexport class InviteRegisterService implements Resolve<any>\n{\n    routeParams: any;\n    user: any;\n    onUserChanged: BehaviorSubject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpRequestsService,\n        private _alertifyService: AlertifyService,\n        private router: Router\n    )\n    {\n        // Set the defaults\n        this.onUserChanged = new BehaviorSubject({});\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        this.routeParams = route.params;\n\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.getUserDetails()\n            ]).then(\n                () => {\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get product\n     *\n     * @returns {Promise<any>}\n     */\n    getUserDetails(): Promise<any>\n    {\n         return new Promise((resolve, reject) => {          \n                this._httpClient.get('Employee/verify/' + this.routeParams.id)\n                    .subscribe((response: any) => {\n                        this.user = response['data'];\n                        this.onUserChanged.next(this.user);\n                        resolve(response['data']);\n                    }, reject);\n            \n        });\n        return null;\n    } \n\n    verifyCode(code): Promise<any>\n    {\n\n         return new Promise((resolve, reject) => {          \n                this._httpClient.get('Employee/verify/' + code)\n                    .subscribe((response: any) => {\n                        this.user = response['data'];\n                        this.onUserChanged.next(this.user);\n                        resolve(response['data']);\n                        this._alertifyService.warning(response['message']);\n                    }, reject);\n            \n        });\n    }\n\n    updatePassword(userId, password){\n\n        const data = {newPass: password};\n            return this._httpClient.post('Users/'+ userId + \"/password\", data);\n        \n\n    }\n\n    /**\n     * Save product\n     *\n     * @param product\n     * @returns {Promise<any>}\n     */\n    saveUser(user): Promise<any>\n    {\n       return new Promise((resolve, reject) => {\n            this._httpClient.put('User/' + this.routeParams.id, user)\n                .subscribe((response: any) => {\n                    this._alertifyService.success('Başarıyla güncellendi.');\n                    resolve(response);\n                    this.router.navigateByUrl('/auth/login');\n                }, reject);\n        });\n    }\n\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}