{"version":3,"sources":["./src/app/main/authentication/invitedRegister/inviteRegister.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpRequestsService } from 'app/shared/services/httpRequests.service';\nimport { AlertifyService } from 'app/shared/services/alertify.service';\n\n@Injectable()\nexport class InviteRegisterService implements Resolve<any>\n{\n    routeParams: any;\n    user: any;\n    onUserChanged: BehaviorSubject<any>;\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(\n        private _httpClient: HttpRequestsService,\n        private _alertifyService: AlertifyService,\n        private router: Router\n    )\n    {\n        // Set the defaults\n        this.onUserChanged = new BehaviorSubject({});\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any\n    {\n        this.routeParams = route.params;\n\n        return new Promise((resolve, reject) => {\n\n            Promise.all([\n                this.getUserDetails()\n            ]).then(\n                () => {\n                    resolve();\n                },\n                reject\n            );\n        });\n    }\n\n    /**\n     * Get product\n     *\n     * @returns {Promise<any>}\n     */\n    getUserDetails(): Promise<any>\n    {\n         return new Promise((resolve, reject) => {          \n                this._httpClient.get('Employee/verify/' + this.routeParams.id)\n                    .subscribe((response: any) => {\n                        this.user = response['data'];\n                        this.onUserChanged.next(this.user);\n                        resolve(response['data']);\n                    }, reject);\n            \n        });\n        return null;\n    } \n\n    verifyCode(code): Promise<any>\n    {\n\n         return new Promise((resolve, reject) => {          \n                this._httpClient.get('Employee/verify/' + code)\n                    .subscribe((response: any) => {\n                        this.user = response['data'];\n                        this.onUserChanged.next(this.user);\n                        resolve(response['data']);\n                        this._alertifyService.warning(response['message']);\n                    }, reject);\n            \n        });\n    }\n\n    updatePassword(userId, password){\n\n        const data = {newPass: password};\n            return this._httpClient.post('Users/'+ userId + \"/password\", data);\n        \n\n    }\n\n    /**\n     * Save product\n     *\n     * @param product\n     * @returns {Promise<any>}\n     */\n    saveUser(user): Promise<any>\n    {\n       return new Promise((resolve, reject) => {\n            this._httpClient.put('User/' + this.routeParams.id, user)\n                .subscribe((response: any) => {\n                    this._alertifyService.success('Başarıyla güncellendi.');\n                    resolve(response);\n                    this.router.navigateByUrl('/auth/login');\n                }, reject);\n        });\n    }\n\n}\n"],"sourceRoot":"webpack:///"}