{"version":3,"sources":["./src/app/main/password/password.component.html","./src/app/main/password/password.component.scss","./src/app/main/password/password.component.ts","./src/app/main/password/password.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,+xEAAguE,GAAG,muCAAmuC,mBAAmB,y1B;;;;;;;;;;;;ACAx+G;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;;;;ACAX;AAC6B;AACR;AAC9B;AAQzC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAI1B,YAAoB,UAA+B,EAAU,eAAgC,EAAS,MAAa;QAA/F,eAAU,GAAV,UAAU,CAAqB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAS,WAAM,GAAN,MAAM,CAAO;QADpH,gBAAW,GAAG,KAAK;QAEd,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IACD,QAAQ;IAER,CAAC;IACD,QAAQ;QACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACxE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;YACpE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAE1C,CAAC,EAAE,KAAK,CAAC,EAAE;YAER,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,uDAAuD,CAAC,CAAC;YACnF,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,CAAC,EAAE,GAAG,EAAE;YACJ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,CAAC,CAAC,CAAC;IACR,CAAC;CAGJ;;YAtBmC,4FAAmB;YAA2B,oFAAe;YAAgB,sDAAM;;AAJ1G,iBAAiB;IAN7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,iOAAwC;;KAGzC,CAAC;2EAKkC,4FAAmB,EAA2B,oFAAe,EAAgB,sDAAM;GAJ1G,iBAAiB,CA0B7B;AA1B6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXW;AACM;AACY;AACF;AACS;AACX;AACE;AACE;AACS;AACX;AACE;AACH;AACT;AACmB;AAClE,MAAM,MAAM,GAAG;IACX;QACI,IAAI,EAAO,EAAE;QACb,SAAS,EAAE,sEAAiB;QAC5B,SAAS,EAAE,MAAM;KACpB;CACJ;AAyBD,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAI;AAAlB,cAAc;IAxB1B,8DAAQ,CAAC;QACR,YAAY,EAAE;YACV,sEAAiB;SACpB;QACD,OAAO,EAAE;YACP,6DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,4DAAY;YACZ,wEAAe;YACf,+EAAkB;YAClB,sEAAc;YACd,oEAAa;YACb,wEAAe;YACf,sEAAe;YACf,yEAAkB;YAClB,sEAAkB;YAClB,2DAAW;YACX,mEAAmB;YACnB,oEAAa;SACd;QAED,eAAe,EAAE;YACf,sEAAiB;SACpB;KACA,CAAC;GACW,cAAc,CAAI;AAAJ","file":"main-password-password-module-es2015.js","sourcesContent":["export default \"<div id=\\\"company\\\" class=\\\"page-layout carded fullwidth inner-scroll\\\">\\n    <div class=\\\"top-bg accent\\\"></div>\\n    <div class=\\\"center\\\">\\n        <div class=\\\"header accent\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.gt-sm=\\\"row\\\"\\n            fxLayoutAlign.gt-sm=\\\"space-between center\\\">\\n            <div class=\\\"logo mb-24 mb-md-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                <mat-icon class=\\\"logo-icon s-32 mr-16\\\">\\n                    business\\n                </mat-icon>\\n                <span class=\\\"logo-text h1\\\">\\n                    Parola Değiştir\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"content-card\\\">\\n            <form #passwordForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">        \\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign.gt-sm=\\\"start start\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"80\\\">\\n                        <mat-label>Parola</mat-label>\\n                        <input name=\\\"password\\\"\\n                        matInput [(ngModel)]=\\\"model.oldPassword\\\"\\n                        placeholder=\\\"Parola\\\" \\n                        #password=\\\"ngModel\\\"\\n            \\n                        type=\\\"password\\\"\\n                        required>\\n                        <mat-error *ngIf=\\\"password.hasError('required')\\\">\\n                            Parola gerekli\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <br>\\n                </div>        \\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign.gt-sm=\\\"start start\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"80\\\">\\n                        <mat-label>Yeni Parola</mat-label>\\n                        <input name=\\\"newPassword\\\"\\n                            matInput [(ngModel)]=\\\"model.newPassword\\\"\\n                             placeholder=\\\"Yeni Parola\\\" \\n                             #newPassword=\\\"ngModel\\\"\\n                             type=\\\"password\\\"\\n                             pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\\\" \\n                            required>\\n                        <mat-error *ngIf=\\\"newPassword.hasError('required')\\\">\\n                                Parola gerekli\\n                        </mat-error>\\n                        <mat-error *ngIf=\\\"newPassword.hasError('pattern')\\\">\\n                                Parola standartlara uymalıdır(En az 6 karekter,bir sayı,bir büyük,bir küçük harf içermelidir)\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <br>\\n                </div>\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign.gt-sm=\\\"start start\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"80\\\">\\n                        <mat-label>Yeni Parola doğrulayın</mat-label>\\n                        <input name=\\\"confirmPassword\\\"\\n                        matInput type=\\\"password\\\" id=\\\"confirmPassword\\\" name=\\\"confirmPassword\\\"\\n                        type=\\\"password\\\"\\n                        placeholder=\\\"Şifre (Doğrula)\\\"\\n                        required \\n                        ngModel\\n                        #confirmPassword=\\\"ngModel\\\"\\n                        pattern=\\\"{{newPassword.value}}\\\"\\n                        >\\n                            <mat-error *ngIf=\\\"confirmPassword.hasError('required')\\\">\\n                                    Parola doğrulaması gerekli\\n                            </mat-error>\\n                            <mat-error *ngIf=\\\"confirmPassword.hasError('pattern')\\\">\\n                                    Parola uyuşmuyor :(\\n                            </mat-error>\\n                    </mat-form-field>\\n                    <br>\\n                </div>          \\n                <div mat-dialog-actions>\\n                    <button mat-button color=\\\"primary\\\">İptal</button>\\n                    <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"!passwordForm.valid ||isSubmiting===true\\\">Kaydet</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vcGFzc3dvcmQvcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpRequestsService } from 'app/shared/services/httpRequests.service';\nimport { AlertifyService } from 'app/shared/services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  \n})\nexport class PasswordComponent implements OnInit {\n   \n   model: any;\n   isSubmiting = false\n    constructor(private httpClient: HttpRequestsService, private alertifyService: AlertifyService,private router:Router) {\n        this.model = {};\n    }\n    ngOnInit(): void {\n\n    }\n    onSubmit(){\n        this.isSubmiting = true;\n         this.httpClient.post('Users/changePassword', this.model).subscribe((res) => {\n            this.alertifyService.success('Şifreniz başarıyla değiştirilmiştir');\n            this.router.navigateByUrl('dashboard');\n            \n         }, error => {\n\n            this.alertifyService.error('Şifre değiştirilemedi lütfen şifrenizi kontrol ediniz');\n             this.isSubmiting = false;\n         }, () => {\n             this.isSubmiting = false;\n         });\n    }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabGroup, MatTabsModule } from '@angular/material/tabs';\nimport { PasswordComponent } from './password.component';\nimport { MirapiSharedModule } from '@mirapi/shared.module';\nimport { MirapiWidgetModule } from '@mirapi/components';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nconst routes = [\n    {\n        path     : '',\n        component: PasswordComponent,\n        pathMatch: 'full'\n    }\n]\n@NgModule({\n  declarations: [\n      PasswordComponent\n  ],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatOptionModule,\n    MirapiSharedModule,\n    MirapiWidgetModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTabsModule                        \n  ],\n  \n  entryComponents: [\n    PasswordComponent\n]\n})\nexport class PasswordModule { }\n"],"sourceRoot":"webpack:///"}